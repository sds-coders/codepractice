The main purpose of the setup script is to describe your module distribution to the Distutils, 
so that the various commands that operate on your modules do the right thing.

It consists mainly of a call to setup(), and most information supplied to the Distutils by the module developer is supplied as keyword arguments to setup().
Here, I build up the necessary information using a dictionary, named 'config'.

config['packages'] takes the name of package as a list. 
It tells the distutils to process all pure python module, found in each package mentioned in the value of the key,list here.
Correspondence with directories in the filesystem needed.

config['scripts'] takes the name of the individual module as a list. 
It is useful when one need to add up the module individually, not as a whole. 
It tells the distutils to process the python module notified in the list.

<<<<Activated by python setup.py install>>>>
	결과 중 이렇게 나옴..!
		Installing nosetests script to /usr/local/bin
		Installing nosetests-3.4 script to /usr/local/bin

		Using /usr/local/lib/python3.6/site-packages
		Finished processing dependencies for test-project==0.1
<<<<Uninstalled by pip uninstall projectname>>>>


1. How to use 'pip'
	installed by pip3 install -U pip.
	3 next to pip indicates we are using pip ver. for python3, -U indicates update the package we want to install.
	For another packages, nose, distribute, virtualenv, suppored by pip is installed likewise.
	
pip is the package installer for Python. You can use pip to install packages from the Python Package Index and other indexes.

Ref. from <https://pip.pypa.io/en/stable/user_guide/>

2. How to use 'nose'

		cd path/to/project
		nosetests

	You should see output something like this:

		..................................
		----------------------------------------------------------------------
		Ran 34 tests in 1.440s

		OK

	Indicating that nose found and ran your tests.

It extends the test loading and running features of unittest, making it easier to write, find and run tests.

    By default, nose will run tests in files or directories under the current working directory whose names include “test” or “Test” at a word boundary (like “test_this” or “functional_test” or “TestClass” but not “libtest”). Test output is similar to that of unittest, but also includes captured stdout output from failing tests, for easy print-style debugging.

3. How to use 'distribute'

안나옴

4. How to use 'virtualenv'

어려움
참조 : https://virtualenv.pypa.io/en/latest/userguide/